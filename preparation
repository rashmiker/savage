Rashmi, 17:02
custom meta box
Custom meta boxes in WordPress are a feature that allows you to add additional fields to the edit screens of posts, pages, or custom post types. These fields can store extra information that isn’t included by default in WordPress. Custom meta boxes are often used to collect extra data from users or to provide additional options for content creators.

Rashmi, 17:03
get post / wp query
1. get_posts()

    Purpose: get_posts() is a simpler function designed to fetch a list of posts based on specified parameters. It is often used for basic queries where advanced features are not required.

    Return Value: It returns an array of WP_Post objects. By default, it doesn’t include pagination or more complex query features.

2. WP_Query

    Purpose: WP_Query is a more flexible and powerful class that allows for advanced querying of posts. It provides extensive parameters and methods for complex queries, including pagination, custom fields, and taxonomies.

    Return Value: It returns a WP_Query object that contains the queried posts and provides methods to work with the result set.

Rashmi, 17:05
plugin files rules
is it ok if there same name folder in plugin root ?
In WordPress, having folders with the same name in the plugin root directory can lead to potential issues, particularly if the folders are not distinct in their purpose or if there is confusion about their use. Here are some important considerations:

Rashmi, 17:07
custom theme files
1. style.css 2. index.php 3. functions.php

Rashmi, 17:10
  // Enqueue parent theme stylesheet
    wp_enqueue_style( 'parent-style', get_template_directory_uri() . '/style.css' );

    // Enqueue child theme stylesheet
    wp_enqueue_style( 'child-style', get_stylesheet_directory_uri() . '/custom-style.css', array('parent-style'), wp_get_theme()->get('Version') );

Rashmi, 17:11
why child theme
A child theme in WordPress is used to extend or modify the functionality and appearance of a parent theme without altering the parent theme’s files. This approach is highly beneficial for various reasons

Rashmi, 17:16
hooks
diff between using example

Action Hooks Example

Scenario: You want to add a custom message at the end of every post.

Code:

php

// Add this code to your theme's functions.php file

function add_custom_message($content) {
    if (is_single()) {
        // This will add a custom message to the end of the post content
        $content .= '<p>Thank you for reading this post!</p>';
    }
    return $content;
}
add_action('the_content', 'add_custom_message');

Explanation:

    Hook Name: the_content
    Callback Function: add_custom_message
    Purpose: The function add_custom_message is hooked to the_content action. This means it will run at the point where WordPress outputs the post content. The function appends a custom message to the end of the content.
    Type: Action Hook (It runs the function but doesn’t alter the core content processing—although it modifies the output, it's still primarily an action.)

Filter Hooks Example

Scenario: You want to modify the title of each post by adding a prefix.

Code:

php

// Add this code to your theme's functions.php file

function add_prefix_to_title($title, $id) {
    if (is_singular('post')) {
        // This will add a prefix to the post title
        return 'Prefix: ' . $title;
    }
    return $title;
}
add_filter('the_title', 'add_prefix_to_title', 10, 2);

Rashmi, 17:18
jquery replace class 
using attr
<script>
        $(document).ready(function() {
            $('#replaceClassButton').click(function() {
                $('#myElement').attr('class', 'new-class'); // Directly set the class attribute
            });
        });
    </script>

Rashmi, 17:19
change color using javascript
 <script>
        document.getElementById('changeColorButton').addEventListener('click', function() {
            document.getElementById('myButton').style.backgroundColor = 'blue'; // Change the background color
        });
    </script>

Rashmi, 17:21
attribute in jquery
Purpose of .attr()

The .attr() method is essential for:

    Retrieving Attribute Values: To get the value of an attribute from an element.
    Setting Attribute Values: To assign or modify the value of an attribute on an element.
    Removing Attributes: (when combined with .removeAttr()) To delete attributes from an element.

Rashmi, 17:23
types of selector in css
1. Basic Selectors
2. Combinator Selectors
3. Pseudo-classes


portfolio
https://app.renewables.org/
https://www.ukcosmeticclinic.co.uk/

What is a Text Domain?

    Definition: A text domain is a unique string used to identify a set of translatable strings in your theme or plugin. It is defined in your code and is associated with your translation files.
    Purpose: It helps WordPress and translation tools map translatable strings to their respective translations in different languages.

.htaccess File

    Role: The .htaccess file is used by the Apache web server to handle URL rewriting rules. WordPress modifies this file to ensure that pretty permalinks work correctly.
    File Location: The .htaccess file is located in the root directory of your WordPress installation.

REST API stands for Representational State Transfer Application Programming Interface. Let's break down what each component means:

    Representational State Transfer (REST):
        Representational State Transfer is an architectural style for designing networked applications. It relies on a stateless, client-server, cacheable communications protocol, typically HTTP.
        REST is designed around the concept of resources, which are identified by URLs. Resources can be manipulated using standard HTTP methods such as GET, POST, PUT, DELETE, etc.

    Application Programming Interface (API):
        Application Programming Interface refers to a set of rules and tools that allows different software applications to communicate with each other. It defines the methods and data formats that applications can use to request and exchange information.


php aggregate functions
MIN() - returns the smallest value within the selected column
MAX() - returns the largest value within the selected column
COUNT() - returns the number of rows in a set
SUM() - returns the total sum of a numerical column
AVG() - returns the average value of a numerical column

php loops
while - loops through a block of code as long as the specified condition is true
do...while - loops through a block of code once, and then repeats the loop as long as the specified condition is true
for - loops through a block of code a specified number of times
foreach - loops through a block of code for each element in an array

use foreach loop
The foreach loop - Loops through a block of code for each element in an array or each property in an object.

join

gitub

Access Modifiers
public - the property or method can be accessed from everywhere. This is default
protected - the property or method can be accessed within the class and by classes derived from that class
private - the property or method can ONLY be accessed within the class

PHP Array Types
In PHP, there are three types of arrays:

Indexed arrays - Arrays with a numeric index
Associative arrays - Arrays with named keys
Multidimensional arrays - Arrays containing one or more arrays

Error handling
in PHP is simple. An error message with filename, line number and a message describing the error is sent to the browser.
When creating scripts and web applications, error handling is an important part. If your code lacks error checking code, your program may look very unprofessional and you may be open to security risks.

This tutorial contains some of the most common error checking methods in PHP.

We will show different error handling methods:

Simple "die()" statements
Custom errors and error triggers
Error reporting

 MySQL Data Types
Numeric Data Types

    Integer Types:
        TINYINT - A very small integer. Range: -128 to 127 (signed) or 0 to 255 (unsigned).
        SMALLINT - A small integer. Range: -32,768 to 32,767 (signed) or 0 to 65,535 (unsigned).
        MEDIUMINT - A medium-sized integer. Range: -8,388,608 to 8,388,607 (signed) or 0 to 16,777,215 (unsigned).
        INT or INTEGER - A standard integer. Range: -2,147,483,648 to 2,147,483,647 (signed) or 0 to 4,294,967,295 (unsigned).
        BIGINT - A large integer. Range: -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 (signed) or 0 to 18,446,744,073,709,551,615 (unsigned).

    Fixed-Point Types:
        DECIMAL - A fixed-point number. You specify the precision and scale (e.g., DECIMAL(10,2)).
        NUMERIC - Similar to DECIMAL and is generally used interchangeably.

    Floating-Point Types:
        FLOAT - A single-precision floating-point number.
        DOUBLE - A double-precision floating-point number.

Date and Time Data Types

    Date and Time Types:
        DATE - A date value. Format: YYYY-MM-DD.
        DATETIME - A date and time value. Format: YYYY-MM-DD HH:MM:SS.
        TIMESTAMP - A timestamp value. Format: YYYY-MM-DD HH:MM:SS. Automatically updates to the current timestamp on record updates.
        TIME - A time value. Format: HH:MM:SS.
        YEAR - A year value. Format: YYYY.

String Data Types

    Character Types:
        CHAR - A fixed-length string. You specify the length (e.g., CHAR(10)).
        VARCHAR - A variable-length string. You specify the maximum length (e.g., VARCHAR(255)).

    Text Types:
        TINYTEXT - A very small text string. Maximum length: 255 characters.
        TEXT - A text string. Maximum length: 65,535 characters.
        MEDIUMTEXT - A medium-sized text string. Maximum length: 16,777,215 characters.
        LONGTEXT - A large text string. Maximum length: 4,294,967,295 characters.

    Binary Types:
        BINARY - A fixed-length binary string.
        VARBINARY - A variable-length binary string.
        TINYBLOB - A very small binary large object. Maximum length: 255 bytes.
        BLOB - A binary large object. Maximum length: 65,535 bytes.
        MEDIUMBLOB - A medium-sized binary large object. Maximum length: 16,777,215 bytes.
        LONGBLOB - A large binary large object. Maximum length: 4,294,967,295 bytes.


How many types of users WordPress have?
WordPress user role determines access permission to the users of a WordPress site.

Administrator: They have full rights over a site.
Editor: They deal with the content section of a website.
Author: They only deal with their posts. They can delete their post even after publishing.
Contributor: A contributor doesn't have the right to publish their post or page. They need to send it to the administrator for review.
Subscriber: Users who are subscribed to your site can log in and update their profile.
Follower: They don't have any right. They can only read and comment on your post.
Viewer: They can only read and comment on a post.



document.ready

Definition: document.ready is a concept primarily associated with jQuery (although modern JavaScript has similar functionality with DOMContentLoaded). It ensures that the DOM (Document Object Model) is fully loaded and ready to be manipulated.
Purpose: It is used to execute JavaScript code only after the DOM has been fully loaded, which allows for safe manipulation of DOM elements.

onload

Definition: The onload event is triggered when the entire page (including all dependent resources such as images, stylesheets, and subframes) has been fully loaded.
Purpose: It is used to execute code when everything on the page has finished loading, including all external resources.

Common Event Types in javascript

    Mouse Events:
        click: Occurs when the user clicks on an element.
        dblclick: Occurs when the user double-clicks on an element.
        mouseover: Occurs when the mouse pointer is moved onto an element.
        mouseout: Occurs when the mouse pointer is moved out of an element.
        mousedown: Occurs when the mouse button is pressed down on an element.
        mouseup: Occurs when the mouse button is released over an element.
        mousemove: Occurs when the mouse pointer is moved while over an element.

    Keyboard Events:
        keydown: Occurs when a key is pressed down.
        keyup: Occurs when a key is released.
        keypress: Occurs when a key is pressed and released (deprecated in favor of keydown and keyup).

    Form Events:
        submit: Occurs when a form is submitted.
        change: Occurs when the value of a form element changes.
        focus: Occurs when an element gains focus.
        blur: Occurs when an element loses focus.

    Window Events:
        load: Occurs when the entire page (including all dependent resources) is fully loaded.
        resize: Occurs when the window is resized.
        scroll: Occurs when the user scrolls the page or an element.
        unload: Occurs when the document or page is unloaded (less commonly used in modern applications).

    Touch Events (on mobile devices):
        touchstart: Occurs when a touch point is placed on the touch surface.
        touchmove: Occurs when a touch point is moved along the touch surface.
        touchend: Occurs when a touch point is removed from the touch surface.
        touchcancel: Occurs when the touch event is interrupted (e.g., by an incoming call).
